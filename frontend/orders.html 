<!DOCTYPE html>
<html lang="ar" dir="rtl">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>إدارة المنتجات - منصة الوساطة الآمنة</title>
    <style>
        * {
            margin: 0;
            padding: 0;
            box-sizing: border-box;
        }
        
        body {
            font-family: 'Segoe UI', Tahoma, Arial, sans-serif;
            background: #f5f7fa;
            min-height: 100vh;
        }
        
        .header {
            background: linear-gradient(135deg, #4CAF50, #45a049);
            color: white;
            padding: 20px;
            display: flex;
            justify-content: space-between;
            align-items: center;
            box-shadow: 0 2px 10px rgba(0,0,0,0.1);
        }
        
        .header h1 {
            font-size: 24px;
        }
        
        .header-actions {
            display: flex;
            gap: 15px;
            align-items: center;
        }
        
        .back-btn, .add-btn {
            background: rgba(255,255,255,0.2);
            border: 1px solid rgba(255,255,255,0.3);
            color: white;
            padding: 8px 15px;
            border-radius: 5px;
            cursor: pointer;
            text-decoration: none;
            transition: all 0.3s;
            font-weight: bold;
        }
        
        .add-btn {
            background: rgba(255,255,255,0.9);
            color: #4CAF50;
        }
        
        .back-btn:hover, .add-btn:hover {
            background: rgba(255,255,255,0.3);
        }
        
        .add-btn:hover {
            background: white;
        }
        
        .container {
            max-width: 1200px;
            margin: 30px auto;
            padding: 0 20px;
        }
        
        .stats-cards {
            display: grid;
            grid-template-columns: repeat(auto-fit, minmax(200px, 1fr));
            gap: 20px;
            margin-bottom: 30px;
        }
        
        .stat-card {
            background: white;
            padding: 25px;
            border-radius: 15px;
            text-align: center;
            box-shadow: 0 5px 15px rgba(0,0,0,0.08);
        }
        
        .stat-number {
            font-size: 32px;
            font-weight: bold;
            color: #4CAF50;
            margin-bottom: 10px;
        }
        
        .stat-label {
            color: #666;
            font-size: 14px;
        }
        
        .products-section {
            background: white;
            border-radius: 15px;
            padding: 30px;
            box-shadow: 0 5px 15px rgba(0,0,0,0.08);
        }
        
        .section-header {
            display: flex;
            justify-content: space-between;
            align-items: center;
            margin-bottom: 30px;
            padding-bottom: 15px;
            border-bottom: 2px solid #f0f0f0;
        }
        
        .section-title {
            font-size: 24px;
            color: #333;
        }
        
        .search-filter {
            display: flex;
            gap: 15px;
            align-items: center;
        }
        
        .search-input {
            padding: 10px 15px;
            border: 2px solid #ddd;
            border-radius: 8px;
            font-size: 14px;
            width: 250px;
        }
        
        .filter-select {
            padding: 10px 15px;
            border: 2px solid #ddd;
            border-radius: 8px;
            font-size: 14px;
        }
        
        .products-grid {
            display: grid;
            grid-template-columns: repeat(auto-fill, minmax(300px, 1fr));
            gap: 25px;
        }
        
        .product-card {
            border: 2px solid #f0f0f0;
            border-radius: 15px;
            overflow: hidden;
            transition: all 0.3s;
            background: #fafafa;
        }
        
        .product-card:hover {
            transform: translateY(-5px);
            border-color: #4CAF50;
        }
        
        .product-image {
            height: 180px;
            background: linear-gradient(45deg, #e8f5e8, #c8e6c9);
            display: flex;
            align-items: center;
            justify-content: center;
            font-size: 48px;
            color: #4CAF50;
        }
        
        .product-info {
            padding: 20px;
        }
        
        .product-name {
            font-size: 18px;
            font-weight: bold;
            margin-bottom: 10px;
            color: #333;
        }
        
        .product-price {
            font-size: 20px;
            font-weight: bold;
            color: #4CAF50;
            margin-bottom: 10px;
        }
        
        .product-status {
            display: inline-block;
            padding: 4px 12px;
            border-radius: 15px;
            font-size: 12px;
            font-weight: bold;
            margin-bottom: 15px;
        }
        
        .status-active {
            background: #d4edda;
            color: #155724;
        }
        
        .status-inactive {
            background: #f8d7da;
            color: #721c24;
        }
        
        .status-pending {
            background: #fff3cd;
            color: #856404;
        }
        
        .product-stats {
            display: grid;
            grid-template-columns: 1fr 1fr;
            gap: 10px;
            margin-bottom: 15px;
            font-size: 14px;
            color: #666;
        }
        
        .product-actions {
            display: flex;
            gap: 8px;
        }
        
        .btn {
            padding: 8px 12px;
            border: none;
            border-radius: 6px;
            cursor: pointer;
            font-size: 12px;
            font-weight: bold;
            transition: all 0.3s;
            text-decoration: none;
            display: inline-block;
            text-align: center;
        }
        
        .btn-edit {
            background: #2196F3;
            color: white;
            flex: 1;
        }
        
        .btn-delete {
            background: #f44336;
            color: white;
            flex: 1;
        }
        
        .btn-toggle {
            background: #ff9800;
            color: white;
            flex: 1;
        }
        
        .btn:hover {
            transform: translateY(-2px);
            opacity: 0.9;
        }
        
        .modal {
            display: none;
            position: fixed;
            top: 0;
            left: 0;
            width: 100%;
            height: 100%;
            background: rgba(0,0,0,0.5);
            z-index: 1000;
        }
        
        .modal-content {
            background: white;
            margin: 5% auto;
            padding: 30px;
            border-radius: 15px;
            width: 90%;
            max-width: 600px;
            max-height: 80vh;
            overflow-y: auto;
        }
        
        .modal-header {
            display: flex;
            justify-content: space-between;
            align-items: center;
            margin-bottom: 25px;
            padding-bottom: 15px;
            border-bottom: 2px solid #f0f0f0;
        }
        
        .modal-title {
            font-size: 24px;
            color: #333;
        }
        
        .close-btn {
            background: none;
            border: none;
            font-size: 24px;
            cursor: pointer;
            color: #666;
        }
        
        .form-group {
            margin-bottom: 20px;
        }
        
        .form-label {
            display: block;
            margin-bottom: 8px;
            font-weight: bold;
            color: #333;
        }
        
        .form-input, .form-textarea, .form-select {
            width: 100%;
            padding: 12px;
            border: 2px solid #ddd;
            border-radius: 8px;
            font-size: 16px;
            transition: border-color 0.3s;
        }
        
        .form-textarea {
            height: 100px;
            resize: vertical;
        }
        
        .form-input:focus, .form-textarea:focus, .form-select:focus {
            outline: none;
            border-color: #4CAF50;
        }
        
        .form-actions {
            display: flex;
            gap: 15px;
            justify-content: flex-end;
            margin-top: 30px;
        }
        
        .btn-primary {
            background: #4CAF50;
            color: white;
            padding: 12px 25px;
        }
        
        .btn-secondary {
            background: #6c757d;
            color: white;
            padding: 12px 25px;
        }
        
        .empty-state {
            text-align: center;
            padding: 60px 20px;
            color: #666;
        }
        
        .empty-state h3 {
            font-size: 24px;
            margin-bottom: 15px;
        }
        
        .empty-state p {
            margin-bottom: 25px;
            font-size: 16px;
        }
        
        @media (max-width: 768px) {
            .search-filter {
                flex-direction: column;
                align-items: stretch;
            }
            
            .search-input {
                width: 100%;
            }
            
            .products-grid {
                grid-template-columns: 1fr;
            }
            
            .modal-content {
                margin: 10% auto;
                width: 95%;
            }
        }
    </style>
</head>
<body>
    <div class="header">
        <h1>إدارة المنتجات</h1>
        <div class="header-actions">
            <button class="add-btn" onclick="openAddProductModal()">+ إضافة منتج جديد</button>
            <a href="dashboard.html" class="back-btn">← العودة للوحة التحكم</a>
        </div>
    </div>
    
    <div class="container">
        <!-- إحصائيات المنتجات -->
        <div class="stats-cards">
            <div class="stat-card">
                <div class="stat-number" id="totalProducts">0</div>
                <div class="stat-label">إجمالي المنتجات</div>
            </div>
            <div class="stat-card">
                <div class="stat-number" id="activeProducts">0</div>
                <div class="stat-label">منتجات نشطة</div>
            </div>
            <div class="stat-card">
                <div class="stat-number" id="totalViews">0</div>
                <div class="stat-label">إجمالي المشاهدات</div>
            </div>
            <div class="stat-card">
                <div class="stat-number" id="totalSales">0</div>
                <div class="stat-label">إجمالي المبيعات</div>
            </div>
        </div>
        
        <!-- قسم المنتجات -->
        <div class="products-section">
            <div class="section-header">
                <h2 class="section-title">منتجاتي</h2>
                <div class="search-filter">
                    <input type="text" class="search-input" placeholder="البحث في المنتجات..." id="searchInput">
                    <select class="filter-select" id="statusFilter">
                        <option value="all">جميع الحالات</option>
                        <option value="active">نشط</option>
                        <option value="inactive">غير نشط</option>
                        <option value="pending">قيد المراجعة</option>
                    </select>
                </div>
            </div>
            
            <div class="products-grid" id="productsGrid">
                <!-- سيتم إضافة المنتجات هنا بواسطة JavaScript -->
            </div>
        </div>
    </div>
    
    <!-- نافذة إضافة/تعديل منتج -->
    <div class="modal" id="productModal">
        <div class="modal-content">
            <div class="modal-header">
                <h3 class="modal-title" id="modalTitle">إضافة منتج جديد</h3>
                <button class="close-btn" onclick="closeProductModal()">&times;</button>
            </div>
            
            <form id="productForm">
                <div class="form-group">
                    <label class="form-label">اسم المنتج</label>
                    <input type="text" class="form-input" id="productName" required>
                </div>
                
                <div class="form-group">
                    <label class="form-label">وصف المنتج</label>
                    <textarea class="form-textarea" id="productDescription" required></textarea>
                </div>
                
                <div class="form-group">
                    <label class="form-label">السعر (ر.س)</label>
                    <input type="number" class="form-input" id="productPrice" min="0" step="0.01" required>
                </div>
                
                <div class="form-group">
                    <label class="form-label">الفئة</label>
                    <select class="form-select" id="productCategory" required>
                        <option value="">اختر الفئة</option>
                        <option value="electronics">إلكترونيات</option>
                        <option value="fashion">أزياء</option>
                        <option value="home">منزل وحديقة</option>
                        <option value="sports">رياضة</option>
                        <option value="books">كتب</option>
                        <option value="other">أخرى</option>
                    </select>
                </div>
                
                <div class="form-group">
                    <label class="form-label">الكمية المتاحة</label>
                    <input type="number" class="form-input" id="productStock" min="0" required>
                </div>
                
                <div class="form-group">
                    <label class="form-label">حالة المنتج</label>
                    <select class="form-select" id="productStatus">
                        <option value="active">نشط</option>
                        <option value="inactive">غير نشط</option>
                    </select>
                </div>
                
                <div class="form-actions">
                    <button type="button" class="btn btn-secondary" onclick="closeProductModal()">إلغاء</button>
                    <button type="submit" class="btn btn-primary">حفظ المنتج</button>
                </div>
            </form>
        </div>
    </div>

    <script>
        // بيانات المنتجات الوهمية
        let products = [
            {
                id: 1,
                name: 'هاتف ذكي متطور',
                description: 'هاتف ذكي بمواصفات عالية وكاميرا متطورة',
                price: 2500,
                category: 'electronics',
                stock: 15,
                status: 'active',
                views: 245,
                sales: 12,
                image: '📱',
                createdAt: '2025-06-01'
            },
            {
                id: 2,
                name: 'لابتوب للألعاب',
                description: 'لابتوب قوي مخصص للألعاب والتصميم',
                price: 4200,
                category: 'electronics',
                stock: 8,
                status: 'active',
                views: 189,
                sales: 5,
                image: '💻',
                createdAt: '2025-06-02'
            },
            {
                id: 3,
                name: 'ساعة ذكية رياضية',
                description: 'ساعة ذكية مقاومة للماء مع مراقب اللياقة',
                price: 850,
                category: 'electronics',
                stock: 25,
                status: 'active',
                views: 156,
                sales: 18,
                image: '⌚',
                createdAt: '2025-06-03'
            },
            {
                id: 4,
                name: 'سماعات لاسلكية',
                description: 'سماعات بلوتوث عالية الجودة مع إلغاء الضوضاء',
                price: 320,
                category: 'electronics',
                stock: 0,
                status: 'inactive',
                views: 98,
                sales: 22,
                image: '🎧',
                createdAt: '2025-06-04'
            }
        ];

        let currentUser = JSON.parse(localStorage.getItem('currentUser'));
        let editingProductId = null;

        // تحميل المنتجات
        function loadProducts(filter = 'all', search = '') {
            const productsGrid = document.getElementById('productsGrid');
            productsGrid.innerHTML = '';

            let filteredProducts = products;

            // تطبيق فلتر الحالة
            if (filter !== 'all') {
                filteredProducts = filteredProducts.filter(product => product.status === filter);
            }

            // تطبيق البحث
            if (search.trim()) {
                filteredProducts = filteredProducts.filter(product => 
                    product.name.toLowerCase().includes(search.toLowerCase()) ||
                    product.description.toLowerCase().includes(search.toLowerCase())
                );
            }

            if (filteredProducts.length === 0) {
                productsGrid.innerHTML = `
                    <div class="empty-state" style="grid-column: 1/-1;">
                        <h3>لا توجد منتجات</h3>
                        <p>لم يتم العثور على منتجات تطابق البحث أو الفلتر المحدد</p>
                        <button class="btn btn-primary" onclick="openAddProductModal()">إضافة منتج جديد</button>
                    </div>
                `;
                return;
            }

            filteredProducts.forEach(product => {
                const productCard = createProductCard(product);
                productsGrid.appendChild(productCard);
            });

            updateStats();
        }

        // إنشاء بطاقة المنتج
        function createProductCard(product) {
            const productCard = document.createElement('div');
            productCard.className = 'product-card';
            
            const statusClass = `status-${product.status}`;
            const statusText = getStatusText(product.status);
            
            productCard.innerHTML = `
                <div class="product-image">${product.image}</div>
                <div class="product-info">
                    <div class="product-name">${product.name}</div>
                    <div class="product-price">${product.price} ر.س</div>
                    <div class="product-status ${statusClass}">${statusText}</div>
                    
                    <div class="product-stats">
                        <div>المخزون: ${product.stock}</div>
                        <div>المشاهدات: ${product.views}</div>
                        <div>المبيعات: ${product.sales}</div>
                        <div>الفئة: ${getCategoryText(product.category)}</div>
                    </div>
                    
                    <div class="product-actions">
                        <button class="btn btn-edit" onclick="editProduct(${product.id})">تعديل</button>
                        <button class="btn btn-toggle" onclick="toggleProductStatus(${product.id})">
                            ${product.status === 'active' ? 'إيقاف' : 'تفعيل'}
                        </button>
                        <button class="btn btn-delete" onclick="deleteProduct(${product.id})">حذف</button>
                    </div>
                </div>
            `;
            
            return productCard;
        }

        // الحصول على نص الحالة
        function getStatusText(status) {
            const statusMap = {
                'active': 'نشط',
                'inactive': 'غير نشط',
                'pending': 'قيد المراجعة'
            };
            return statusMap[status] || status;
        }

        // الحصول على نص الفئة
        function getCategoryText(category) {
            const categoryMap = {
                'electronics': 'إلكترونيات',
                'fashion': 'أزياء',
                'home': 'منزل وحديقة',
                'sports': 'رياضة',
                'books': 'كتب',
                'other': 'أخرى'
            };
            return categoryMap[category] || category;
        }

        // تحديث الإحصائيات
        function updateStats() {
            const totalProducts = products.length;
            const activeProducts = products.filter(p => p.status === 'active').length;
            const totalViews = products.reduce((sum, p) => sum + p.views, 0);
            const totalSales = products.reduce((sum, p) => sum + p.sales, 0);

            document.getElementById('totalProducts').textContent = totalProducts;
            document.getElementById('activeProducts').textContent = activeProducts;
            document.getElementById('totalViews').textContent = totalViews;
            document.getElementById('totalSales').textContent = totalSales;
        }

        // فتح نافذة إضافة منتج
        function openAddProductModal() {
            editingProductId = null;
            document.getElementById('modalTitle').textContent = 'إضافة منتج جديد';
            document.getElementById('productForm').reset();
            document.getElementById('productModal').style.display = 'block';
        }

        // فتح نافذة تعديل منتج
        function editProduct(productId) {
            const product = products.find(p => p.id === productId);
            if (!product) return;

            editingProductId = productId;
            document.getElementById('modalTitle').textContent = 'تعديل المنتج';
            
            document.getElementById('productName').value = product.name;
            document.getElementById('productDescription').value = product.description;
            document.getElementById('productPrice').value = product.price;
            document.getElementById('productCategory').value = product.category;
            document.getElementById('productStock').value = product.stock;
            document.getElementById('productStatus').value = product.status;
            
            document.getElementById('productModal').style.display = 'block';
        }

        // إغلاق نافذة المنتج
        function closeProductModal() {
            document.getElementById('productModal').style.display = 'none';
            editingProductId = null;
        }

        // تبديل حالة المنتج
        function toggleProductStatus(productId) {
            const product = products.find(p => p.id === productId);
            if (product) {
                product.status = product.status === 'active' ? 'inactive' : 'active';
                loadProducts();
                
                const statusText = product.status === 'active' ? 'تم تفعيل' : 'تم إيقاف';
                alert(`${statusText} المنتج بنجاح`);
            }
        }

        // حذف منتج
        function deleteProduct(productId) {
            if (confirm('هل أنت متأكد من حذف هذا المنتج؟\nلا يمكن التراجع عن هذا الإجراء.')) {
                products = products.filter(p => p.id !== productId);
                loadProducts();
                alert('تم حذف المنتج بنجاح');
            }
        }

        // معالجة نموذج المنتج
        document.getElementById('productForm').addEventListener('submit', function(e) {
            e.preventDefault();
            
            const formData = {
                name: document.getElementById('productName').value,
                description: document.getElementById('productDescription').value,
                price: parseFloat(document.getElementById('productPrice').value),
                category: document.getElementById('productCategory').value,
                stock: parseInt(document.getElementById('productStock').value),
                status: document.getElementById('productStatus').value
            };

            if (editingProductId) {
                // تعديل منتج موجود
                const product = products.find(p => p.id === editingProductId);
                if (product) {
                    Object.assign(product, formData);
                    alert('تم تحديث المنتج بنجاح');
                }
            } else {
                // إضافة منتج جديد
                const newProduct = {
                    id: Date.now(),
                    ...formData,
                    views: 0,
                    sales: 0,
                    image: getRandomEmoji(),
                    createdAt: new Date().toISOString().split('T')[0]
                };
                products.push(newProduct);
                alert('تم إضافة المنتج بنجاح');
            }

            closeProductModal();
            loadProducts();
        });

        // الحصول على رمز تعبيري عشوائي
        function getRandomEmoji() {
            const emojis = ['📱', '💻', '⌚', '🎧', '📷', '🖥️', '⌨️', '🖱️', '📺', '🎮'];
            return emojis[Math.floor(Math.random() * emojis.length)];
        }

        // البحث والفلترة
        document.getElementById('searchInput').addEventListener('input', function() {
            const search = this.value;
            const filter = document.getElementById('statusFilter').value;
            loadProducts(filter, search);
        });

        document.getElementById('statusFilter').addEventListener('change', function() {
            const filter = this.value;
            const search = document.getElementById('searchInput').value;
            loadProducts(filter, search);
        });

        // إغلاق النافذة عند النقر خارجها
        window.addEventListener('click', function(e) {
            const modal = document.getElementById('productModal');
            if (e.target === modal) {
                closeProductModal();
            }
        });

        // تحميل الصفحة
        window.onload = function() {
            // التحقق من تسجيل الدخول
            if (!currentUser || !currentUser.isLoggedIn) {
                alert('يجب تسجيل الدخول أولاً');
                window.location.href = 'login.html';
                return;
            }

            // التحقق من أن المستخدم بائع
            if (currentUser.userType !== 'seller') {
                alert('هذه الصفحة مخصصة للبائعين فقط');
                window.location.href = 'dashboard.html';
                return;
            }

            loadProducts();
        };
    </script>
</body>
</html>

