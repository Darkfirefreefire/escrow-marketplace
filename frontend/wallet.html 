<!DOCTYPE html>
<html lang="ar" dir="rtl">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>المحفظة المالية - منصة الوساطة الآمنة</title>
    <style>
        * {
            margin: 0;
            padding: 0;
            box-sizing: border-box;
        }
        
        body {
            font-family: 'Segoe UI', Tahoma, Arial, sans-serif;
            background: #f5f7fa;
            min-height: 100vh;
        }
        
        .header {
            background: linear-gradient(135deg, #4CAF50, #45a049);
            color: white;
            padding: 20px;
            display: flex;
            justify-content: space-between;
            align-items: center;
            box-shadow: 0 2px 10px rgba(0,0,0,0.1);
        }
        
        .header h1 {
            font-size: 24px;
        }
        
        .back-btn {
            background: rgba(255,255,255,0.2);
            border: 1px solid rgba(255,255,255,0.3);
            color: white;
            padding: 8px 15px;
            border-radius: 5px;
            cursor: pointer;
            text-decoration: none;
            transition: all 0.3s;
        }
        
        .back-btn:hover {
            background: rgba(255,255,255,0.3);
        }
        
        .container {
            max-width: 1200px;
            margin: 30px auto;
            padding: 0 20px;
        }
        
        .wallet-overview {
            display: grid;
            grid-template-columns: repeat(auto-fit, minmax(250px, 1fr));
            gap: 20px;
            margin-bottom: 30px;
        }
        
        .balance-card {
            background: linear-gradient(135deg, #4CAF50, #45a049);
            color: white;
            padding: 30px;
            border-radius: 15px;
            text-align: center;
            box-shadow: 0 5px 15px rgba(76, 175, 80, 0.3);
        }
        
        .balance-title {
            font-size: 16px;
            opacity: 0.9;
            margin-bottom: 10px;
        }
        
        .balance-amount {
            font-size: 36px;
            font-weight: bold;
            margin-bottom: 15px;
        }
        
        .balance-change {
            font-size: 14px;
            opacity: 0.8;
        }
        
        .stats-card {
            background: white;
            padding: 25px;
            border-radius: 15px;
            text-align: center;
            box-shadow: 0 5px 15px rgba(0,0,0,0.08);
        }
        
        .stats-icon {
            font-size: 32px;
            margin-bottom: 15px;
        }
        
        .stats-title {
            font-size: 14px;
            color: #666;
            margin-bottom: 10px;
        }
        
        .stats-value {
            font-size: 24px;
            font-weight: bold;
            color: #333;
        }
        
        .quick-actions {
            background: white;
            border-radius: 15px;
            padding: 30px;
            margin-bottom: 30px;
            box-shadow: 0 5px 15px rgba(0,0,0,0.08);
        }
        
        .section-title {
            font-size: 20px;
            margin-bottom: 20px;
            color: #333;
        }
        
        .actions-grid {
            display: grid;
            grid-template-columns: repeat(auto-fit, minmax(200px, 1fr));
            gap: 15px;
        }
        
        .action-btn {
            background: #f8f9fa;
            border: 2px solid #e9ecef;
            padding: 20px;
            border-radius: 10px;
            cursor: pointer;
            transition: all 0.3s;
            text-align: center;
        }
        
        .action-btn:hover {
            border-color: #4CAF50;
            background: #f0f8f0;
        }
        
        .action-icon {
            font-size: 24px;
            margin-bottom: 10px;
        }
        
        .action-title {
            font-weight: bold;
            margin-bottom: 5px;
        }
        
        .action-desc {
            font-size: 12px;
            color: #666;
        }
        
        .transactions-section {
            background: white;
            border-radius: 15px;
            padding: 30px;
            box-shadow: 0 5px 15px rgba(0,0,0,0.08);
        }
        
        .transactions-header {
            display: flex;
            justify-content: space-between;
            align-items: center;
            margin-bottom: 25px;
        }
        
        .filter-tabs {
            display: flex;
            gap: 10px;
        }
        
        .tab-btn {
            padding: 8px 16px;
            background: transparent;
            border: 2px solid #e9ecef;
            border-radius: 20px;
            cursor: pointer;
            transition: all 0.3s;
            font-size: 14px;
        }
        
        .tab-btn.active {
            background: #4CAF50;
            color: white;
            border-color: #4CAF50;
        }
        
        .transactions-list {
            display: flex;
            flex-direction: column;
            gap: 15px;
        }
        
        .transaction-item {
            display: flex;
            align-items: center;
            padding: 20px;
            background: #f8f9fa;
            border-radius: 10px;
            transition: all 0.3s;
        }
        
        .transaction-item:hover {
            background: #e9ecef;
        }
        
        .transaction-icon {
            width: 50px;
            height: 50px;
            border-radius: 50%;
            display: flex;
            align-items: center;
            justify-content: center;
            font-size: 20px;
            margin-left: 15px;
        }
        
        .transaction-in {
            background: #d4edda;
            color: #155724;
        }
        
        .transaction-out {
            background: #f8d7da;
            color: #721c24;
        }
        
        .transaction-pending {
            background: #fff3cd;
            color: #856404;
        }
        
        .transaction-details {
            flex: 1;
        }
        
        .transaction-title {
            font-weight: bold;
            margin-bottom: 5px;
        }
        
        .transaction-desc {
            font-size: 14px;
            color: #666;
            margin-bottom: 5px;
        }
        
        .transaction-date {
            font-size: 12px;
            color: #999;
        }
        
        .transaction-amount {
            font-size: 18px;
            font-weight: bold;
        }
        
        .amount-positive {
            color: #28a745;
        }
        
        .amount-negative {
            color: #dc3545;
        }
        
        .amount-pending {
            color: #ffc107;
        }
        
        .modal {
            display: none;
            position: fixed;
            top: 0;
            left: 0;
            width: 100%;
            height: 100%;
            background: rgba(0,0,0,0.5);
            z-index: 1000;
        }
        
        .modal-content {
            background: white;
            margin: 10% auto;
            padding: 30px;
            border-radius: 15px;
            width: 90%;
            max-width: 500px;
        }
        
        .modal-header {
            display: flex;
            justify-content: space-between;
            align-items: center;
            margin-bottom: 25px;
            padding-bottom: 15px;
            border-bottom: 2px solid #f0f0f0;
        }
        
        .modal-title {
            font-size: 20px;
            color: #333;
        }
        
        .close-btn {
            background: none;
            border: none;
            font-size: 24px;
            cursor: pointer;
            color: #666;
        }
        
        .form-group {
            margin-bottom: 20px;
        }
        
        .form-label {
            display: block;
            margin-bottom: 8px;
            font-weight: bold;
            color: #333;
        }
        
        .form-input, .form-select {
            width: 100%;
            padding: 12px;
            border: 2px solid #ddd;
            border-radius: 8px;
            font-size: 16px;
            transition: border-color 0.3s;
        }
        
        .form-input:focus, .form-select:focus {
            outline: none;
            border-color: #4CAF50;
        }
        
        .btn {
            padding: 12px 25px;
            border: none;
            border-radius: 8px;
            cursor: pointer;
            font-weight: bold;
            transition: all 0.3s;
            text-decoration: none;
            display: inline-block;
            text-align: center;
        }
        
        .btn-primary {
            background: #4CAF50;
            color: white;
        }
        
        .btn-primary:hover {
            background: #45a049;
            transform: translateY(-2px);
        }
        
        .btn-secondary {
            background: #6c757d;
            color: white;
        }
        
        .empty-state {
            text-align: center;
            padding: 40px 20px;
            color: #666;
        }
        
        @media (max-width: 768px) {
            .wallet-overview {
                grid-template-columns: 1fr;
            }
            
            .actions-grid {
                grid-template-columns: 1fr;
            }
            
            .transaction-item {
                flex-direction: column;
                text-align: center;
                gap: 15px;
            }
        }
    </style>
</head>
<body>
    <div class="header">
        <h1>المحفظة المالية</h1>
        <a href="dashboard.html" class="back-btn">← العودة للوحة التحكم</a>
    </div>
    
    <div class="container">
        <!-- نظرة عامة على المحفظة -->
        <div class="wallet-overview">
            <div class="balance-card">
                <div class="balance-title">الرصيد المتاح</div>
                <div class="balance-amount" id="availableBalance">2,450 ر.س</div>
                <div class="balance-change">+150 ر.س هذا الشهر</div>
            </div>
            
            <div class="stats-card">
                <div class="stats-icon">🔒</div>
                <div class="stats-title">الأموال المحجوزة</div>
                <div class="stats-value" id="escrowBalance">1,200 ر.س</div>
            </div>
            
            <div class="stats-card">
                <div class="stats-icon">📈</div>
                <div class="stats-title">إجمالي الإيرادات</div>
                <div class="stats-value" id="totalEarnings">8,750 ر.س</div>
            </div>
            
            <div class="stats-card">
                <div class="stats-icon">💳</div>
                <div class="stats-title">المعاملات الشهرية</div>
                <div class="stats-value" id="monthlyTransactions">24</div>
            </div>
        </div>
        
        <!-- الإجراءات السريعة -->
        <div class="quick-actions">
            <h2 class="section-title">الإجراءات السريعة</h2>
            <div class="actions-grid">
                <div class="action-btn" onclick="openAddFundsModal()">
                    <div class="action-icon">💰</div>
                    <div class="action-title">إضافة أموال</div>
                    <div class="action-desc">شحن المحفظة من البنك</div>
                </div>
                
                <div class="action-btn" onclick="openWithdrawModal()">
                    <div class="action-icon">🏦</div>
                    <div class="action-title">سحب أموال</div>
                    <div class="action-desc">تحويل للحساب البنكي</div>
                </div>
                
                <div class="action-btn" onclick="openTransferModal()">
                    <div class="action-icon">📤</div>
                    <div class="action-title">تحويل أموال</div>
                    <div class="action-desc">إرسال لمستخدم آخر</div>
                </div>
                
                <div class="action-btn" onclick="viewEscrowFunds()">
                    <div class="action-icon">🛡️</div>
                    <div class="action-title">الأموال المحجوزة</div>
                    <div class="action-desc">عرض معاملات الوساطة</div>
                </div>
            </div>
        </div>
        
        <!-- سجل المعاملات -->
        <div class="transactions-section">
            <div class="transactions-header">
                <h2 class="section-title">سجل المعاملات</h2>
                <div class="filter-tabs">
                    <button class="tab-btn active" onclick="filterTransactions('all')">الكل</button>
                    <button class="tab-btn" onclick="filterTransactions('in')">واردة</button>
                    <button class="tab-btn" onclick="filterTransactions('out')">صادرة</button>
                    <button class="tab-btn" onclick="filterTransactions('escrow')">وساطة</button>
                </div>
            </div>
            
            <div class="transactions-list" id="transactionsList">
                <!-- سيتم إضافة المعاملات هنا بواسطة JavaScript -->
            </div>
        </div>
    </div>
    
    <!-- نافذة إضافة أموال -->
    <div class="modal" id="addFundsModal">
        <div class="modal-content">
            <div class="modal-header">
                <h3 class="modal-title">إضافة أموال للمحفظة</h3>
                <button class="close-btn" onclick="closeModal('addFundsModal')">&times;</button>
            </div>
            
            <form id="addFundsForm">
                <div class="form-group">
                    <label class="form-label">المبلغ (ر.س)</label>
                    <input type="number" class="form-input" id="addAmount" min="10" step="0.01" required>
                </div>
                
                <div class="form-group">
                    <label class="form-label">طريقة الدفع</label>
                    <select class="form-select" id="paymentMethod" required>
                        <option value="">اختر طريقة الدفع</option>
                        <option value="bank">تحويل بنكي</option>
                        <option value="card">بطاقة ائتمان</option>
                        <option value="stc">STC Pay</option>
                        <option value="apple">Apple Pay</option>
                    </select>
                </div>
                
                <div style="display: flex; gap: 15px; justify-content: flex-end; margin-top: 25px;">
                    <button type="button" class="btn btn-secondary" onclick="closeModal('addFundsModal')">إلغاء</button>
                    <button type="submit" class="btn btn-primary">إضافة الأموال</button>
                </div>
            </form>
        </div>
    </div>
    
    <!-- نافذة سحب أموال -->
    <div class="modal" id="withdrawModal">
        <div class="modal-content">
            <div class="modal-header">
                <h3 class="modal-title">سحب أموال من المحفظة</h3>
                <button class="close-btn" onclick="closeModal('withdrawModal')">&times;</button>
            </div>
            
            <form id="withdrawForm">
                <div class="form-group">
                    <label class="form-label">المبلغ (ر.س)</label>
                    <input type="number" class="form-input" id="withdrawAmount" min="10" step="0.01" required>
                    <small style="color: #666;">الحد الأدنى للسحب: 10 ر.س</small>
                </div>
                
                <div class="form-group">
                    <label class="form-label">رقم الحساب البنكي</label>
                    <input type="text" class="form-input" id="bankAccount" placeholder="SA..." required>
                </div>
                
                <div style="display: flex; gap: 15px; justify-content: flex-end; margin-top: 25px;">
                    <button type="button" class="btn btn-secondary" onclick="closeModal('withdrawModal')">إلغاء</button>
                    <button type="submit" class="btn btn-primary">سحب الأموال</button>
                </div>
            </form>
        </div>
    </div>

    <script>
        // بيانات المعاملات الوهمية
        const transactions = [
            {
                id: 'TXN-001',
                type: 'escrow_release',
                title: 'تحرير أموال الوساطة',
                description: 'طلب رقم ORD-001 - هاتف ذكي متطور',
                amount: 2500,
                date: '2025-06-12 14:30',
                status: 'completed'
            },
            {
                id: 'TXN-002',
                type: 'escrow_hold',
                title: 'حجز أموال الوساطة',
                description: 'طلب رقم ORD-002 - لابتوب للألعاب',
                amount: -4200,
                date: '2025-06-11 10:15',
                status: 'pending'
            },
            {
                id: 'TXN-003',
                type: 'deposit',
                title: 'إيداع في المحفظة',
                description: 'تحويل بنكي من حساب الراجحي',
                amount: 1000,
                date: '2025-06-10 16:45',
                status: 'completed'
            },
            {
                id: 'TXN-004',
                type: 'withdrawal',
                title: 'سحب من المحفظة',
                description: 'تحويل إلى حساب الأهلي',
                amount: -500,
                date: '2025-06-09 09:20',
                status: 'completed'
            },
            {
                id: 'TXN-005',
                type: 'transfer_in',
                title: 'تحويل وارد',
                description: 'من المستخدم أحمد محمد',
                amount: 250,
                date: '2025-06-08 13:10',
                status: 'completed'
            }
        ];

        let currentUser = JSON.parse(localStorage.getItem('currentUser'));

        // تحميل المعاملات
        function loadTransactions(filter = 'all') {
            const transactionsList = document.getElementById('transactionsList');
            transactionsList.innerHTML = '';

            let filteredTransactions = transactions;

            if (filter !== 'all') {
                filteredTransactions = transactions.filter(transaction => {
                    switch(filter) {
                        case 'in': return transaction.amount > 0;
                        case 'out': return transaction.amount < 0;
                        case 'escrow': return transaction.type.includes('escrow');
                        default: return true;
                    }
                });
            }

            if (filteredTransactions.length === 0) {
                transactionsList.innerHTML = `
                    <div class="empty-state">
                        <h3>لا توجد معاملات</h3>
                        <p>لم يتم العثور على معاملات في هذه الفئة</p>
                    </div>
                `;
                return;
            }

            filteredTransactions.forEach(transaction => {
                const transactionItem = createTransactionItem(transaction);
                transactionsList.appendChild(transactionItem);
            });
        }

        // إنشاء عنصر المعاملة
        function createTransactionItem(transaction) {
            const transactionItem = document.createElement('div');
            transactionItem.className = 'transaction-item';

            const iconClass = getTransactionIconClass(transaction);
            const amountClass = getAmountClass(transaction.amount, transaction.status);
            const amountText = formatAmount(transaction.amount);

            transactionItem.innerHTML = `
                <div class="transaction-icon ${iconClass}">
                    ${getTransactionIcon(transaction.type)}
                </div>
                <div class="transaction-details">
                    <div class="transaction-title">${transaction.title}</div>
                    <div class="transaction-desc">${transaction.description}</div>
                    <div class="transaction-date">${formatDate(transaction.date)}</div>
                </div>
                <div class="transaction-amount ${amountClass}">
                    ${amountText}
                </div>
            `;

            return transactionItem;
        }

        // الحصول على فئة أيقونة المعاملة
        function getTransactionIconClass(transaction) {
            if (transaction.status === 'pending') return 'transaction-pending';
            return transaction.amount > 0 ? 'transaction-in' : 'transaction-out';
        }

        // الحصول على أيقونة المعاملة
        function getTransactionIcon(type) {
            const icons = {
                'escrow_release': '🔓',
                'escrow_hold': '🔒',
                'deposit': '💰',
                'withdrawal': '🏦',
                'transfer_in': '📥',
                'transfer_out': '📤'
            };
            return icons[type] || '💳';
        }

        // الحصول على فئة المبلغ
        function getAmountClass(amount, status) {
            if (status === 'pending') return 'amount-pending';
            return amount > 0 ? 'amount-positive' : 'amount-negative';
        }

        // تنسيق المبلغ
        function formatAmount(amount) {
            const sign = amount > 0 ? '+' : '';
            return `${sign}${Math.abs(amount).toLocaleString()} ر.س`;
        }

        // تنسيق التاريخ
        function formatDate(dateString) {
            const date = new Date(dateString);
            return date.toLocaleString('ar-SA', {
                year: 'numeric',
                month: 'short',
                day: 'numeric',
                hour: '2-digit',
                minute: '2-digit'
            });
        }

        // فلترة المعاملات
        function filterTransactions(filter) {
            // تحديث أزرار التبويبات
            document.querySelectorAll('.tab-btn').forEach(btn => btn.classList.remove('active'));
            event.target.classList.add('active');

            // تحميل المعاملات المفلترة
            loadTransactions(filter);
        }

        // فتح نافذة إضافة أموال
        function openAddFundsModal() {
            document.getElementById('addFundsModal').style.display = 'block';
        }

        // فتح نافذة سحب أموال
        function openWithdrawModal() {
            document.getElementById('withdrawModal').style.display = 'block';
        }

        // فتح نافذة تحويل أموال
        function openTransferModal() {
            alert('صفحة التحويل قيد التطوير');
        }

        // عرض الأموال المحجوزة
        function viewEscrowFunds() {
            alert('عرض تفاصيل الأموال المحجوزة في معاملات الوساطة');
        }

        // إغلاق النافذة
        function closeModal(modalId) {
            document.getElementById(modalId).style.display = 'none';
        }

        // معالجة نموذج إضافة أموال
        document.getElementById('addFundsForm').addEventListener('submit', function(e) {
            e.preventDefault();
            
            const amount = parseFloat(document.getElementById('addAmount').value);
            const paymentMethod = document.getElementById('paymentMethod').value;
            
            if (amount < 10) {
                alert('الحد الأدنى للإيداع هو 10 ر.س');
                return;
            }
            
            // محاكاة عملية الإيداع
            const newTransaction = {
                id: `TXN-${Date.now()}`,
                type: 'deposit',
                title: 'إيداع في المحفظة',
                description: `${getPaymentMethodName(paymentMethod)}`,
                amount: amount,
                date: new Date().toISOString().slice(0, 16).replace('T', ' '),
                status: 'completed'
            };
            
            transactions.unshift(newTransaction);
            
            // تحديث الرصيد
            const currentBalance = parseFloat(document.getElementById('availableBalance').textContent.replace(/[^\d.]/g, ''));
            document.getElementById('availableBalance').textContent = `${(currentBalance + amount).toLocaleString()} ر.س`;
            
            alert(`تم إيداع ${amount} ر.س بنجاح في محفظتك`);
            closeModal('addFundsModal');
            loadTransactions();
            
            // إعادة تعيين النموذج
            this.reset();
        });

        // معالجة نموذج سحب أموال
        document.getElementById('withdrawForm').addEventListener('submit', function(e) {
            e.preventDefault();
            
            const amount = parseFloat(document.getElementById('withdrawAmount').value);
            const bankAccount = document.getElementById('bankAccount').value;
            
            const currentBalance = parseFloat(document.getElementById('availableBalance').textContent.replace(/[^\d.]/g, ''));
            
            if (amount > currentBalance) {
                alert('الرصيد غير كافي للسحب');
                return;
            }
            
            if (amount < 10) {
                alert('الحد الأدنى للسحب هو 10 ر.س');
                return;
            }
            
            // محاكاة عملية السحب
            const newTransaction = {
                id: `TXN-${Date.now()}`,
                type: 'withdrawal',
                title: 'سحب من المحفظة',
                description: `تحويل إلى حساب ${bankAccount.slice(-4)}`,
                amount: -amount,
                date: new Date().toISOString().slice(0, 16).replace('T', ' '),
                status: 'completed'
            };
            
            transactions.unshift(newTransaction);
            
            // تحديث الرصيد
            document.getElementById('availableBalance').textContent = `${(currentBalance - amount).toLocaleString()} ر.س`;
            
            alert(`تم سحب ${amount} ر.س بنجاح من محفظتك`);
            closeModal('withdrawModal');
            loadTransactions();
            
            // إعادة تعيين النموذج
            this.reset();
        });

        // الحصول على اسم طريقة الدفع
        function getPaymentMethodName(method) {
            const methods = {
                'bank': 'تحويل بنكي',
                'card': 'بطاقة ائتمان',
                'stc': 'STC Pay',
                'apple': 'Apple Pay'
            };
            return methods[method] || method;
        }

        // إغلاق النافذة عند النقر خارجها
        window.addEventListener('click', function(e) {
            if (e.target.classList.contains('modal')) {
                e.target.style.display = 'none';
            }
        });

        // تحميل الصفحة
        window.onload = function() {
            // التحقق من تسجيل الدخول
            if (!currentUser || !currentUser.isLoggedIn) {
                alert('يجب تسجيل الدخول أولاً');
                window.location.href = 'login.html';
                return;
            }

            loadTransactions();
        };
    </script>
</body>
</html>

